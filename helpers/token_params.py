from drf_yasg import openapi
token_param_start = openapi.Parameter('after', in_=openapi.IN_QUERY, description="filter for session requests that started after this datetime. E.g. 2022-12-10T13:45:00Z", type=openapi.FORMAT_DATETIME)
token_param_end = openapi.Parameter('before', in_=openapi.IN_QUERY, description="filter for session requests that started before this datetime. E.g. 2022-12-10T13:45:00Z", type=openapi.FORMAT_DATETIME)
token_param_config = openapi.Parameter('institute_fnid', in_=openapi.IN_QUERY, description="This parameter must be included in the query string of every call.", type=openapi.TYPE_STRING)
token_param_student = openapi.Parameter('student_fnid', in_=openapi.IN_QUERY, description="filter for student_fnid", type=openapi.TYPE_STRING)
token_param_session_type = openapi.Parameter('session_type_fnid', in_=openapi.IN_QUERY, description="filter for session_type_fnid", type=openapi.TYPE_STRING)
token_param_session = openapi.Parameter('session_fnid', in_=openapi.IN_QUERY, description="filter for session_fnid", type=openapi.TYPE_STRING)
token_param_expired = openapi.Parameter('expired', in_=openapi.IN_QUERY, description="filter for expired course requests", type=openapi.TYPE_BOOLEAN)
token_param_course_instance=openapi.Parameter('course_instance_fnid', in_=openapi.IN_QUERY, description="filter for course_instance_fnid", type=openapi.TYPE_STRING)
token_param_fnid=openapi.Parameter('fnid', in_=openapi.IN_QUERY, description="filter for object fnid", type=openapi.TYPE_STRING)
token_param_school=openapi.Parameter('school_fnid', in_=openapi.IN_QUERY, description="filter for school_fnid", type=openapi.TYPE_STRING)
token_param_programme=openapi.Parameter('programme_fnid', in_=openapi.IN_QUERY, description="filter for programme_fnid", type=openapi.TYPE_STRING)
token_param_present=openapi.Parameter('present', in_=openapi.IN_QUERY, description="filter for present", type=openapi.TYPE_BOOLEAN)
token_param_min=openapi.Parameter('min', in_=openapi.IN_QUERY, description="Min value (Int required)", type=openapi.TYPE_INTEGER)
token_param_max=openapi.Parameter('max', in_=openapi.IN_QUERY, description="Max value (Int optional)", type=openapi.TYPE_INTEGER)
token_param_name=openapi.Parameter('name', in_=openapi.IN_QUERY, description="Name (String optional)", type=openapi.TYPE_STRING)
token_param_last_name=openapi.Parameter('last_name', in_=openapi.IN_QUERY, description="Last Name (String optional)", type=openapi.TYPE_STRING)
token_param_first_name=openapi.Parameter('first_name', in_=openapi.IN_QUERY, description="First Name (String optional)", type=openapi.TYPE_STRING)
token_param_active=openapi.Parameter('active', in_=openapi.IN_QUERY, description="filter for active", type=openapi.TYPE_BOOLEAN)
token_param_international=openapi.Parameter('international', in_=openapi.IN_QUERY, description="filter for international", type=openapi.TYPE_BOOLEAN)
token_param_year=openapi.Parameter('year', in_=openapi.IN_QUERY, description="filter for year", type=openapi.TYPE_INTEGER)
token_param_student_id=openapi.Parameter('student_id', in_=openapi.IN_QUERY, description="filter for student_id", type=openapi.TYPE_STRING)
token_param_programme_name=openapi.Parameter('programme_name', in_=openapi.IN_QUERY, description="filter for programme_name", type=openapi.TYPE_STRING)
token_param_term=openapi.Parameter('term_fnid', in_=openapi.IN_QUERY, description="filter for term_fnid", type=openapi.TYPE_STRING)
token_param_code=openapi.Parameter('code', in_=openapi.IN_QUERY, description="filter for code", type=openapi.TYPE_STRING)
token_param_n=openapi.Parameter('n', in_=openapi.IN_QUERY, description="Number of consecutive sessions missed", type=openapi.TYPE_STRING)